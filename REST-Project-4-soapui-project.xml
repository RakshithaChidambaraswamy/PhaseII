<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="dd29d154-c69e-47aa-a6ba-b1ca14705b04" activeEnvironment="Default" name="REST Project 4" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="93772ee8-6103-447c-8a6f-af631ed441bb" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://petstore.swagger.io" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://petstore.swagger.io</con:endpoint></con:endpoints><con:resource name="V2" path="" id="197bb8ca-398a-4d98-a3d9-b96c5808d88d"><con:settings/><con:parameters/><con:resource name="petb" path="/v2/petb" id="aabfff6f-8fd0-49bb-9780-bc6416b9422d"><con:settings/><con:parameters/><con:method name="Method 1" id="e105e06b-c718-40e1-a05a-a24a2c50495a" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="4e5ee689-7af6-4d8e-a91c-3c4df5d41b18" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="pet123" path="/pet123" id="18efe4ef-cff6-4380-ba60-75b096fff4ad"><con:settings/><con:parameters/><con:method name="Method 1" id="7dbc5e38-1565-42c4-8a86-861d88cd7f9b" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="e3228fb0-172d-4eb0-ad7f-7a7653faa610" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="V2 1" id="d4f06403-a3f6-4e59-9aed-79e120d4a4c8" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="dc6b3eca-dc9e-465c-8d71-f61a9feacda0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io/v2/pet</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="asdfgh" id="e1987d47-a1c2-4781-9bdd-6048984e4111" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="7281742a-9550-46d1-a251-aeb59a93af10" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://petstore.swagger.io/pet/12345</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="aed33866-bd9f-44a6-a3af-1effb9c03317" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="939efec9-00f6-49b8-8364-db63e81c28f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="REST Request" id="1d60a185-6342-42c9-b0a7-7570e95e2480"><con:settings/><con:config service="http://petstore.swagger.io" resourcePath="/v2/petb" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="4e5ee689-7af6-4d8e-a91c-3c4df5d41b18" mediaType="application/json"><con:settings/><con:endpoint>http://petstore.swagger.io</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="0dc8d96e-35c9-4ae5-8e57-e11714a896e4" port="8080" path="/" host="LAPTOP-J0OINBC5" name="REST MockService 1" docroot=""><con:settings/><con:properties/><con:restMockAction name="/pet" method="GET" resourcePath="/pet" id="2b294bd4-44b3-4ced-85bb-2334c8654733"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="f4ce2b64-756f-4a0c-b667-1363ef87bcc0" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{ "name":"api session",
"tagname":"anything"
}</con:responseContent><con:header><con:name>Expires</con:name><con:value>Anything</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>